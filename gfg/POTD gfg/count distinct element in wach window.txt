 vector <int> countDistinct (int arr[], int n, int k)
    {
       
          
          vector<int>ans;
          unordered_map<int,int>hash;
          int count=0;

          //traverse the firstwindow & store count of every element in hashmap

          for(int i=0;i<k;i++)
          {
              if(hash[arr[i]]==0)  //if ffreq is 0 then we increase the count
                    count++;
              hash[arr[i]]++;  //else we insert that element in the hash map
              
          }
          ans.push_back(count);  //insert count of the first window
          
          //traverse through the remaining array
          
          for(int i=k;i<n;i++)
          {
              //remove the first element of the first  window

              if(hash[arr[i-k]]==1)
                 count--;

             //reduce he count of removed element 

              hash[arr[i-k]]=hash[arr[i-k]]-1;
              
              //add new element to the hashmap if it is not prsent and increase the count

              if(hash[arr[i]]==0)
                    count++;
                
                hash[arr[i]]+=1;
                ans.push_back(count);
                
              
          }
          return ans;
          
    }