/* 

Intervals = {{1,3},{2,4},{6,8},{9,10}}
Output: {{1, 4}, {6, 8}, {9, 10}}
Explanation: Given intervals: [1,3],[2,4]
[6,8],[9,10], we have only two overlapping
intervals here,[1,3] and [2,4]. Therefore
we will merge these two and return [1,4],
[6,8], [9,10].

 */

class Solution {
public:
    vector<vector<int>> overlappedInterval(vector<vector<int>>& intervals) {
         // Code here
         vector<vector<int>>mergeInterval;
         sort(intervals.begin(),intervals.end());
         vector<int>temp=intervals[0];
         
         for(auto it:intervals)
         {
            if(it[0]<=temp[1])
            {
                //merge
                temp[1]=max(it[1],temp[1]);
                
            }
            else
            {
              mergeInterval.push_back(temp);
              temp=it;
            }
             
         }
         mergeInterval.push_back(temp);
         return mergeInterval;
         
         
    }
};